
Practice 1

•Create a user defined data type named “MARKS_TYPE” having the following subfields

Column	              Data type and size
Subject	                 VARCHAR 2 (25)
midTermMarks	NUMBER (3)
annualMarks	NUMBER(3)


•Create an object table with name “MYMARKS” having a single column of type MARKS_TYPE.
•Insert any 3 records in the table with relevant data
•Fire an appropriate SELECT command to get midTermMarks and annualMarks for all records for the given subject

ANS-

 -----------------------------------------------------------------
create or replace type MARKS_TYPE as object
(subject varchar2(25),
midTermMarks number(3),
annualMarks number(3)
);
/

---------------------------------------------------------

create table mymarks (marks marks_type);
--------------------------------------------------------------

insert into mymarks values(marks_type('maths' , 98, 99));
insert into mymarks values(marks_type('physics' , 75, 80));
insert into mymarks values(marks_type('biology' , 82, 80));
--------------------------------------------------------------

select p.marks.midTermMarks from mymarks p where p.marks.subject like 'maths';

MARKS.MIDTERMMARKS
------------------
                98
-------------------------------------------------------------------


SQL> select * from mymarks;

MARKS(SUBJECT, MIDTERMMARKS, ANNUALMARKS)
--------------------------------------------
MARKS_TYPE('maths', 98, 99)
MARKS_TYPE('physics', 75, 80)
MARKS_TYPE('biology', 82, 80)


=============================================================================================

Practice 2

•Create table “students” having the following design

Column	              Data type and size	Constraint
studentName	VARCHAR 2 (25)	
rollNo	                NUMBER (3)	Primary Key
Score	               MARKS_TYPE	

•Insert any 3 relevant records in the table.
•Fire an appropriate SELECT query to get the score of a student with the given rollNO
•Fire an appropriate command to increase the annualMarks of the student with given rollNo by five marks

ANS-

----------------------------------------------
create or replace type marks_type as object
(subject varchar2(25),
midtermmarks number(3),
annualmarks number(3)
);

---------------------------------------------------

create table students ( studentName varchar2(25) , rollNo number(3), score marks_type);

-----------------------------------------------------------------

insert into students values ('ank' , 1 , marks_type( 'maths' , 76 , 67));
insert into students values ('jit' , 2 , marks_type( 'physics' , 78 , 65));
insert into students values ('sarv' , 3 , marks_type( 'bio' , 75 , 66));
 ------------------------------------------------------------------

select p.score.midtermmarks , p.score.annualmarks from students p where rollNo=1;

---------------------------------------------------------

update students p set p.score.annualmarks=p.score.annualmarks+5 where rollNo=1;
--------------------------------------
select * from students;


STUDENTNAME                   ROLLNO
------------------------- ----------
SCORE(SUBJECT, MIDTERMMARKS, ANNUALMARKS)
-----------------------------------------------
ank                                1
MARKS_TYPE('maths', 76, 72)

jit                                2
MARKS_TYPE('physics', 78, 65)

sarv                               3
MARKS_TYPE('bio', 75, 66)

========================================================================

Practice 3

•Create user defined data type named “ICECREAM_TYPE” with the following data members

Column	                         Data type and size
flovorNo	                          NUMBER(2)
Fname	                        VARCHAR(10)
Cost	                          NUMBER(3)
Hastopping	    CHAR(1)   Can be Y or N

•Create table named “menu” with the following design and insert five records into it.

Column	                           Data type and size	Constraint
MenuNo	                                   NUMBER(2)	Primary key
mainCourse	           VARCHAR2(15)	Not Null
Desert	                          ICECREAM_TYPE	
Colddrink	                                   CHAR(6)	


•Retrieve cost and name of an icecream from menu by specifying its flavor number.
•Update cost and maincourse column  from menu by specifying its MenuNo.

ANS-

create or replace type icecream_type as object 
( flovorNo number(2) , 
Fname varchar2(10),
cost number(3),
hastopping char(1)
);
---------------------------
create table menu (menuNo number(2) primary key, mainCourse varchar2(15) not null, desert icecream_type, coldDrink char(6));

--------------------------------
insert into menu values(1,'rice', icecream_type(11,'choco' , 80, 'y') , 'fanta');
insert into menu values(2,'burger', icecream_type(12,'mango' , 88, 'y') , 'slice');
insert into menu values(3,'fries', icecream_type(13,'almond' , 90, 'y') , 'pepsi');
--------------------------------

select p.desert.cost from menu p where p.desert.fname like 'mango';

DESERT.COST
-----------
         88
-----------------------------------
update menu p set p.desert.cost=200 , mainCourse='noodles' where menuNo=1;

------------------------------------
SQL> select * from menu;

    MENUNO MAINCOURSE
---------- ---------------
DESERT(FLOVORNO, FNAME, COST, HASTOPPING)
------------------------------------------------------------------------------
COLDDR
------
         1 noodles
ICECREAM_TYPE(11, 'choco', 200, 'y')
fanta

         2 burger
ICECREAM_TYPE(12, 'mango', 88, 'y')
slice

    MENUNO MAINCOURSE
---------- ---------------
DESERT(FLOVORNO, FNAME, COST, HASTOPPING)
------------------------------------------------------------------------------
COLDDR
------

         3 fries
ICECREAM_TYPE(13, 'almond', 90, 'y')
pepsi

==================================================================================================================
CURSOR......................................


Practice 2

A.Create an object type CUST_TAB with below attributes
-	Cust_id
-	Cust_Name
-	Plan_Name
B.Create suitable collection type CUST_DETAILS of CUST_TAB type.
One customer may have many plans .

C.Create a table Cust_Tab_details as follows :

Columname                            	Constraint  	Datatype
Srno                               	Primary Key            	  Number(10)
Cust_Info                      	 	                CUST_DETAILS
Cust_number	 	                                   Number(10)
		                             
D.Insert 2 rows in the above table 
Atleast 2 CUST_TAB entries per srno.
E.Write the select query to display Sr.no and Cust_info from cust_tab_detail table
Note : Write SQL select command not the procedure.
				
ANS-

create or replace type cust_tab as object (cust_id number, cust_name varchar2(20), plan_name varchar2(20));

-------------------------
create type cust_details as varray(5) of cust_tab;
----------------------------
create table cust_tab_details (srno number(10) primary key, cust_info cust_details,cust_number number(10));

----------------------------

insert into cust_tab_details values (101,cust_details(cust_tab(1,'aaa','plan1') , cust_tab(2,'bbb','plan2')), 111);
insert into cust_tab_details values (102,cust_details(cust_tab(3,'ccc','plan3') , cust_tab(4,'ddd','plan4')), 222);
insert into cust_tab_details values (103,cust_details(cust_tab(5,'eee','plan5') , cust_tab(6,'fff','plan6')), 333);

----------------------
select * from cust_tab_details ;
      SRNO
----------
CUST_INFO(CUST_ID, CUST_NAME, PLAN_NAME)
--------------------------------------------------------------------------------
CUST_NUMBER
-----------
       101
CUST_DETAILS(CUST_TAB(1, 'aaa', 'plan1'), CUST_TAB(2, 'bbb', 'plan2'))
        111

       102
CUST_DETAILS(CUST_TAB(3, 'ccc', 'plan3'), CUST_TAB(4, 'ddd', 'plan4'))
        222

      SRNO
----------
CUST_INFO(CUST_ID, CUST_NAME, PLAN_NAME)
--------------------------------------------------------------------------------
CUST_NUMBER
-----------

       103
CUST_DETAILS(CUST_TAB(5, 'eee', 'plan5'), CUST_TAB(6, 'fff', 'plan6'))
        333
-------------------------------------------------------

declare
var cust_details;
cursor c1 is select * from cust_tab_details;

begin
for y in c1
loop
select cust_info into var from cust_tab_details where srno=y.srno;

for x in 1..var.count
loop
dbms_output.put_line('cust id= ' ||var(x).cust_id || ' cust name= ' || var(x).cust_name ||' plan name= ' || var(x).plan_name);
end loop;
end loop;
end;

o/p:
cust id= 1 cust name= aaa plan name= plan1
cust id= 2 cust name= bbb plan name= plan2
cust id= 3 cust name= ccc plan name= plan3
cust id= 4 cust name= ddd plan name= plan4
cust id= 5 cust name= eee plan name= plan5
cust id= 6 cust name= fff plan name= plan6

PL/SQL procedure successfully completed.
====================================================================================================================

Practice 4

Create an object type VEHICLE_TYPE to record the vehicle details owned by an employee.  VEHICLE_TYPE  has the following design :


Vehicle_No	VARCHAR2(12)
Vehicle_Type	CHAR(1)  (T for two wheeler and F for four wheeler)
Monthly_Expense	NUMBER(7)


•Create a varray named VEHICLE_ARR of VEHICLE_TYPE that can store max of 3 vehicle details for each employee.

•Create a table EMP_VARRAY with the following design :

Emp_No	                    NUMBER (4)	               PRIMARY KEY
Emp_Name	VARCHAR2 (30)	
vehicleList	VEHICLE_ARR	

•Add two relevant records in the table with only one vehicleList member for each emp_no.

•Write a procedure named ADD_VEHICLE_DETAILS that accepts Emp_no and vehicle details and adds the vehicle details for the corresponding Emp_no in the EMP_VARRAY table. The procedure should handle all the probable errors by displaying the appropriate error messages on the screen.

•Give a call to ADD_VEHICLE_DETAILS from an anonymous PL/SQL block

ANS-

create or replace type vehicle_type as object ( vehicle_no number(10), vehicle_type char(1), monthly_expense number(7));
-----------------------------
create type vehicle_arr as varray(4) of vehicle_type;
-------------
create table emp_varray (emp_no number(4) primary key,emp_name varchar2(30),vehiclelist vehicle_arr);
----------------

insert into emp_varray values(101,'ank',vehicle_arr(vehicle_type(9895,'T',1111)));

------------------
select * from emp_varray;

    EMP_NO EMP_NAME
---------- ------------------------------
VEHICLELIST(VEHICLE_NO, VEHICLE_TYPE, MONTHLY_EXPENSE)
----------------------------------------------------------------------
       101 ank
VEHICLE_ARR(VEHICLE_TYPE(9895, 'T', 1111))

---------------------------------
create or replace procedure add_details(empno number,v_arr vehicle_arr) as
begin
insert into emp_varray values(102,'jit',v_arr);
exception
when DUP_VAL_ON_INDEX then
dbms_output.put_line('invalid employee ID !!!!');
end;
/
---------------------
declare
t_var vehicle_arr;
begin
t_var:=vehicle_arr(vehicle_type(5555, 'T',4444), vehicle_type(6666, 'T', 3333));
add_details(102,t_var);
end;
/
o/p:
    EMP_NO EMP_NAME
---------- ------------------------------
VEHICLELIST(VEHICLE_NO, VEHICLE_TYPE, MONTHLY_EXPENSE)
--------------------------------------------------------------------------------
       101 ank
VEHICLE_ARR(VEHICLE_TYPE(9895, 'T', 1111))

       102 jit
VEHICLE_ARR(VEHICLE_TYPE(5555, 'T', 4444), VEHICLE_TYPE(6666, 'T', 3333))

====================================================================================================================


Practice 5

A.create an object named paper_obj with following attributes:
      paperid
     paperName
     publishDate

B.Create suitable collection type paper_details of paper_obj type.
C.Create a table Author_Tab as follows :

Columname                            	Constraint  	 Datatype
Authorid                        	Primary Key            	  Number(10)
AuthorName                      	 	                  Varchar2(20)
Papers	 	                                                        paper_details
		                             
D. Insert 2 rows in the above table 
Atleast 2 paper_obj entries per author.

ANS-

create or replace type paper_obj as object(paperid number(10), papername varchar2(20), publishdate date);
----------------------
create type paper_details as varray(5) of paper_obj;
----------------------
create table author_tab(author_id number primary key, author_name varchar2(20), papers paper_details);
---------------------
insert into author_tab values(101,'ank', paper_details(paper_obj(1,'TOI', '01-JAN-2017'), paper_obj(2,'IE', '02-FEB-2017')));

insert into author_tab values(102,'JIT', paper_details(paper_obj(3,'TOI', '05-JAN-2017'), paper_obj(4,'IE', '22-FEB-2017')));

=================================================================================================================


Practice 6 

Create an object type to maintain the history of salary hike given to employees named INCREMENT_TYPE having the following design:

Incr_ID	          NUMBER (3)
Incr_Date	          DATE
Incr_Amt	          NUMBER (7)


•Create a table named EMP_DETAIL with one of the column having the data type as SKILLS_TYPE and another one INCREMENT_TYPE. 

Emp_No	                    NUMBER (4)
Emp_Name	CHAR (30)
Emp_Skills	SKILLS_TYPE
Emp_Incr	                  INCREMENT_TYPE


•Insert few records in table EMP_DETAIL. 

•Write a procedure that will accept Emp_No as a parameter and display the data from EMP_DETAIL as follows:

Employee No:   XXXXXXX		Employee Name: XXXXXXXXXX
___________________________________________________
Skill Set
	
Skill ID: XXX		Skill Name: XXXXX		Rating: XX
___________________________________________________
Increment

Increment ID: XXXX	Increment Date: XXXXXX	 Amount: XXXXXX
      
The procedure

ANS-
==============================================================================================================================================================================================================================================================================================================================

2)

A.Create an object type CUST_TAB with below attributes
-	Cust_id
-	Cust_Name
-	Plan_Name
B.Create suitable collection type CUST_DETAILS of CUST_TAB type.
One customer may have many plans .

C.Create a table Cust_Tab_details as follows :

Column name                            	Constraint  	Datatype
Srno                          	 	Primary Key            	  Number(10)
Cust_Info                      	 			CUST_DETAILS
Cust_number	 	                                	Number(10)
		                             
D.Insert 2 rows in the above table 
Atleast 2 CUST_TAB entries per srno.
E.Write the select query to display Sr.no and Cust_info from cust_tab_detail table
Note : Write SQL select command not the procedure.

----------->>>>>
create or replace type CUST_TAB as object
(Cust_id  number,
Cust_Name varchar2(20),
Plan_Name  varchar2(20));
/

create type CUST_DETAILS as varray(5) of CUST_TAB;

create table Cust_Tab_details(Srno Number(10) Primary Key, Cust_Info CUST_DETAILS,Cust_number Number(10));
insert into   Cust_Tab_details values(1,CUST_DETAILS(CUST_TAB(101 ,'shashank','BB CONNECTIONS'),CUST_TAB(201,'aditya','UNLIMITED PLAN')),201);    	 insert into   Cust_Tab_details values(2,CUST_DETAILS(CUST_TAB(301 ,'pranali','BMW CONNECTIONS'),CUST_TAB(401,'puja','JIO PLAN')),501);  


declare
cus_info CUST_DETAILS;
s_no Number;
cursor c1 is select * from Cust_Tab_details;
begin
for y in c1
loop
select srno,cust_info into s_no,cus_info from Cust_Tab_details where srno=y.srno;
for x in 1..cus_info.count
loop
dbms_output.put_line('srno is    '||s_no||'   custid is  '||cus_info(x).Cust_id||'  cust name is  '||cus_info(x).Cust_Name||'   plan name is  '||cus_info(x).Plan_Name);
end loop;
end loop;
end;
/

====================================================================================================

4)Practice 4

Create an object type VEHICLE_TYPE to record the vehicle details owned by an employee.  VEHICLE_TYPE  has the following design :


Vehicle_No	VARCHAR2(12)
Vehicle_Type	CHAR(1)  
(T for two wheeler and F for four wheeler)
Monthly_Expense	NUMBER(7)


•Create a varray named VEHICLE_ARR of VEHICLE_TYPE that can store max of 3 vehicle details for each employee.

•Create a table EMP_VARRAY with the following design :

Emp_No	                           NUMBER (4)	PRIMARY KEY
Emp_Name	         VARCHAR2 (30)	
vehicleList	                         VEHICLE_ARR	

•Add two relevant records in the table with only one vehicleList member for each emp_no.

•Write a procedure named ADD_VEHICLE_DETAILS that accepts Emp_no and vehicle details and adds the vehicle details for the corresponding Emp_no in the EMP_VARRAY table. The procedure should handle all the probable errors by displaying the appropriate error messages on the screen.

•Give a call to ADD_VEHICLE_DETAILS from an anonymous PL/SQL block


---------------------->

create or replace type VEHICLE_TYPE as object
(Vehicle_No VARCHAR2(12),
Vehicle_Type CHAR(1),
Monthly_Expense NUMBER(7));
/

create or replace type VEHICLE_ARR as varray(3) of  VEHICLE_TYPE ;
/

Create  table EMP_VARRAY(Emp_No NUMBER(4) PRIMARY KEY,Emp_Name VARCHAR2(30),vehicleList VEHICLE_ARR);

insert into  EMP_VARRAY values(1001,'shashank',VEHICLE_ARR(VEHICLE_TYPE(5819,'T',1000),VEHICLE_TYPE(5665,'f',10000),VEHICLE_TYPE(5656,'f',20000)));
insert into  EMP_VARRAY values(1002,'pranali',VEHICLE_ARR(VEHICLE_TYPE(5800,'T',1000),VEHICLE_TYPE(8100,'f',50000),VEHICLE_TYPE(5789,'f',21000)));

create or replace procedure forinsert(empno number,v_arr  VEHICLE_ARR) as
begin
insert into EMP_VARRAY values(1002,'puja',v_arr);
exception
when DUP_VAL_ON_INDEX then
dbms_output.put_line('enter valid emp id');
end;
/

declare
t_var VEHICLE_ARR;
begin
t_var:=VEHICLE_ARR(VEHICLE_TYPE(5800,'T',1000),VEHICLE_TYPE(8100,'f',50000),VEHICLE_TYPE(5789,'f',21000));
forinsert(1002,t_var);
end;
/


create or replace procedure forModify(p_empid number,p_var in out vehicle_arr) as
car number;
begin
car:=p_var.count;
p_var.extend(1);
p_var(car+1):=VEHICLE_TYPE(8888,'F',6000);
update EMP_VARRAY set vehicleList=p_var where Emp_No=p_empid;
end;

=======================================================================

3)Practice 3


•Create a nested table type SKILL_TAB_TYPE of the above mentioned SKILL_TYPE type.

•Create a table EMPMAIN with the following structure:

Emp_No	NUMBER (4)	PRIMARY KEY
Emp_Name	CHAR (30)	
All_Skills	SKILL_TAB_TYPE	

     Give appropriate names for the corresponding storage tables
•Insert the following record in the table EMPMAIN. 
Example:
Emp_No	Emp_Name	All_Skills
1001	Aman Dev	101	Design	9
201	Code	10
301	Test	8


•	Insert 2-3 more records in EMPMAIN.
•	Update the Skill Rating for Aman for Skill 301 to 9. (Use TABLE CLAUSE).
•	Delete all the records where Skill Name is Null.
•	Create a procedure named ADD_SKILL that will accept Emp_No  and skill details as parameters and add the skill details to the corresponding record from the EMPMAIN table. The procedure should handle all the probable errors by displaying the appropriate error messages on the screen.
•	Give a call to ADD_SKILL from an anonymous PL/SQL block


create type SKILL_TYPE as object
(skill_id number(3),
skill_name varchar2(20),
rating number(2));
/
 
create type skill_details as table of skill_type;

create table EMPMAIN(Emp_No NUMBER(4) PRIMARY KEY,Emp_Name CHAR(30),all_skills skill_details)
nested table all_skills store as skill_details_tab;
/

insert into EMPMAIN values(1001,'Aman Dev',skill_details(skill_type(101,'Design',9),skill_type(201,'Code',10),skill_type(301,'Test',8)));

insert into EMPMAIN values(3001,'Aditya',skill_details(skill_type(101,'Design',8),skill_type(201,'Code',7),skill_type(301,'Test',10)));
insert into EMPMAIN values(4001,'shashank',skill_details(skill_type(101,null,8),skill_type(201,'Code',7),skill_type(301,'Test',10)));
update the(select all_skills from empmain where emp_no=1001) set rating=9 where skill_id=301;

delete from the(select all_skills from empmain where emp_no=4001) where skill_name is null and skill_id=101;

create or replace procedure ADD_SKILL(Emp_No NUMBER,skill_id number,skill_name varchar2,rating number) as
begin
insert into EMPMAIN values(emp_no,'Aditya',skill_details(skill_type(skill_id,'skill_name',rating)));
end;
/
create or replace procedure ADD_SKILL(p_empid number,p_var in out skill_details,skill_id number,skill_name varchar2,rating number) as
car number;
begin
car:=p_var.count;
p_var.extend(1);
p_var(car+1):=skill_type(skill_id,skill_name,rating);
update EMPMAIN set all_skills=p_var where Emp_No=p_empid;
end;
/
create or replace procedure ADD_SKILL(p_eno number, skill_detail2 varchar2, skill_detail3 number) as
skill_detail1 number;
begin
select max(skill_id) into skill_detail1 from the (select all_skills from empmain where emp_no=p_eno);
skill_detail1:=skill_detail1+100;
insert into the (select all_skills from empmain where emp_no=p_eno) values (SKILL_TYPE(skill_detail1,skill_detail2,skill_detail3));
dbms_output.put_line('Added');
end;
/
begin
add_skill(3001,'Test',9);
end;
/

















